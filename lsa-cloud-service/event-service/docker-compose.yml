version: "2"
networks:
  lsa-cloud-service_lsa:
  keycloak-network:
services:
  keycloak:
    image: com-noslen-authorization-server:latest
    hostname: keycloak
    container_name: keycloak
    environment:
      keycloak.use-resource-role-mappings: 1
      KEYCLOAK_USER: noslen
      KEYCLOAK_PASSWORD: pass
#      KC_HOSTNAME: keycloak
      KC_FRONTEND_URL: http://keycloak:8083/auth
      AUTH_SERVER_URL: http://keycloak:8083/auth
      DB_VENDOR: MYSQL
      DB_PORT: 3306
      DB_DATABASE: keycloakDB
      DB_USER: keycloakUser
      DB_PASSWORD: kcPword
      spring.datasource.password: kcPword
      spring.datasource.username: keycloakUser
      spring.datasource.url: jdbc:mysql://authserver:3306/keycloakDB
      spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
      spring.jpa.hibernate.ddl-auto: update
      spring.jpa.show-sql: 1
      spring.keycloak.realm: lsa
      spring.keycloak.auth-server-url: http://keycloak:8083
      spring.keycloak.ssl-required: external
      spring.keycloak.use-resource-role-mappings: 1
      management.endpoints.routesEnabled: 1
      eureka.client.registerWithEureka: 1
      eureka.client.fetchRegistry: 1
      eureka.client.enabled: 1
      #      eureka.host: service-registry
      EUREKA_HOST: service-registry
      eureka.instance.preferIpAddress: 1
      eureka.client.serviceUrl.defaultZone: http://service-registry:8761/eureka
    expose:
      - "8083"
    ports:
      - "8083:8083"
    networks:
      - keycloak-network
      - lsa-cloud-service_lsa
    depends_on:
      - mysql

  mysql:
    image: mysql:latest
    container_name: mysql
    hostname: authserver
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: keycloakDB
      MYSQL_USER: keycloakUser
      MYSQL_PASSWORD: kcPword
    expose:
      - "3036"
    #    ports:
    #      - "3306:3306"
    networks:
      - keycloak-network
    depends_on:
      - service-registry

  config-service:
    image: com-noslen-lsa-config-service:latest
    container_name: config-server
    ports:
      - "9999:9999"
    networks:
      - lsa-cloud-service_lsa

  service-registry:
    image: com-noslen-service-registry:latest
    container_name: service-registry
    hostname: service-registry
    expose:
      - "8761"
    ports:
      - "8761:8761"
    networks:
      - lsa-cloud-service_lsa
    depends_on:
      - config-service

  gateway:
    image: com-noslen-gateway-service:latest
    container_name: gateway
    environment:
      spring.application.name: gateway-service
      spring.cloud.gateway.redis.enabled: 0
      spring.security.oauth2.client.provider.keycloak.issuer-uri: http://keycloak:8083/auth/realms/lsa
      spring.security.oauth2.client.registration.event-service.provider: keycloak
      spring.security.oauth2.client.registration.event-service.client-id: event-service
      spring.security.oauth2.client.registration.event-service.client-secret: 3F2275wzaP7AkhEIeiOjePffT8eYruFs
      spring.security.oauth2.client.registration.event-service.scope[0]: openid
      spring.security.oauth2.client.registration.event-service.scope[1]: email
      spring.security.oauth2.client.registration.event-service.scope[2]: profile
      spring.security.oauth2.client.registration.event-service.scope[3]: roles
      spring.cloud.gateway.routes[0].uri: http://localhost:5001
      spring.cloud.gateway.routes[0].id: events
      spring.cloud.gateway.routes[0].predicates[0]: Path=/api/event/**
      spring.cloud.gateway.routes[0].filters[0]: TokenRelay=
      eureka.client.enabled: 1
      eureka.host: service-registry
      eureka.instance.preferIpAddress: 1
      eureka.client.serviceUrl.defaultZone: http://service-registry:8761/eureka
    ports:
      - "8086:8086"
    networks:
      - lsa-cloud-service_lsa
      - keycloak-network
    depends_on:
      - keycloak

  event-service:
    image: com-noslen-event-service:latest
    container_name: event-service
    env_file:
      - /Users/noslen/DevProjects/lsa_env/lsa_gateway.env
    ports:
      - "5001:5001"
    networks:
      -  lsa-cloud-service_lsa


